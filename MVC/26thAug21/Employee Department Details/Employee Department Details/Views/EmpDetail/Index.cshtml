@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@addTagHelper*, Microsoft.AspNetCore.Mvc.TagHelpers
@using Employee_Department_Details.Models;

@{
    ViewData["Title"] = "Index";
}
@model IEnumerable<EmployeeDetails>

<div class="row">
    <div class="col-6">
        <h4>Employee Details</h4>
    </div>
    <div class="col-3">
        <a asp-action="Create" class="btn btn-primary">Add New Employee</a>
    </div>
    <div class="col-3">
        <a asp-controller="Department" asp-action="Create" class="btn btn-primary">Add Department</a>
    </div>
</div>

<form asp-action="index" method="get">
    <div class="row">
        <div class="col-12">
            Search Employee: <input type="text" name="searchText" value="@ViewData["currentSearch"]" />
            <input type="submit" class="btn btn-primary" value="Search" />
        </div>
    </div>
</form>

<div class="row mt-5">
    <div class="col-12">

        <table class="table table-bordered table-striped" style="width: 100%">
            <thead>
                <tr>
                    <th>
                        <a asp-action="Index" asp-route-sortorder="@ViewData["IdSortParam"]">Id</a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortorder="@ViewData["NameSortParam"]">Name</a>
                    </th>
                    <th>
                        Designation
                    </th>
                    <th>
                        Department Id
                    </th>
                    <th>
                        Hire Date
                    </th>
                    <th>
                        Status
                    </th>
                    <th>
                        Edit
                    </th>
                    <th>
                        Remove
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td width="10%">
                            @item.Id
                        </td>
                        <td width="20%">
                            @item.Name
                        </td>
                        <td width="20%">
                            @item.Designation
                        </td>
                        <td width="20%">
                            @item.DepartmentId
                        </td>
                        <td width="15%">
                            @item.HireDate
                        </td>
                        <td>
                            <a asp-action="Status" asp-route-id="@item.Id" class="btn btn-primary">Active</a>
                        </td>
                        <td width="15%">
                            <a asp-action="Update" asp-route-id="@item.Id" class="btn btn-primary">Update</a>
                        </td>
                        <td width="15%">
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-primary"
                               onclick="return confirm('Are you Sure to delete the Data')">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <br />
        <table cellpadding="0" cellspacing="0">
            <tr>
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <td>
                        @if (i != Model.CurrentPageIndex)
                        {
                            <a href="javascript:PagerClick(@i);">@i</a>
                        }
                        else
                        {
                            <span>@i</span>
                        }
                    </td>
                }
            </tr>
        </table>
        <input type="hidden" id="hfCurrentPageIndex" name="currentPageIndex" />
        <script type="text/javascript">
            function PagerClick(index) {
                document.getElementById("hfCurrentPageIndex").value = index;
                document.forms[0].submit();
            }
        </script>

    </div>
</div>
